# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestAddcontact():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_addcontact(self):
    # Test name: add_contact
    # Step # | name | target | value
    # 1 | open | http://34.118.122.203/administration/index.php?controller=AdminLogin&token=1e53b83c6f3b96a3ca75976d5bab155e | 
    self.driver.get("http://34.118.122.203/administration/index.php?controller=AdminLogin&token=1e53b83c6f3b96a3ca75976d5bab155e")
    # 2 | setWindowSize | 1936x1056 |
    self.driver.set_window_size(1936, 1056)
    # 3 | type | id=email | leahivanovici@gmail.com
    self.driver.find_element(By.ID, "email").send_keys("leahivanovici@gmail.com")
    # 4 | type | id=passwd | 123456789
    self.driver.find_element(By.ID, "passwd").send_keys("123456789")
    # 5 | click | id=submit_login | 
    self.driver.find_element(By.ID, "submit_login").click()
    side_bar = WebDriverWait(self.driver, 15).until(lambda d: d.find_element(By.ID, "nav-sidebar"))
    self.driver.execute_script("let container = document.getElementById('nav-sidebar'); container.scrollTo(0,1000);")
    # 6 | click | css=#subtab-ShopParameters span |
    self.driver.find_element(By.CSS_SELECTOR, "#subtab-ShopParameters span").click()
    # 7 | click | linkText=Contact |
    contact = WebDriverWait(self.driver, 15).until(lambda d: d.find_element(By.LINK_TEXT, "Contact"))
    contact.click()
    # 8 | click | id=page-header-desc-configuration-add |
    self.driver.find_element(By.ID, "page-header-desc-configuration-add").click()
    # 9 | click | id=contact_title_1 |
    self.driver.find_element(By.ID, "contact_title_1").click()
    # 10 | type | id=contact_title_1 | Reclamatie
    self.driver.find_element(By.ID, "contact_title_1").send_keys("Reclamatie")
    # 11 | click | id=contact_email |
    self.driver.find_element(By.ID, "contact_email").click()
    # 12 | type | id=contact_email | i_leia@yahoo.com
    self.driver.find_element(By.ID, "contact_email").send_keys("i_leia@yahoo.com")
    # 13 | click | id=contact_description_1 |
    self.driver.find_element(By.ID, "contact_description_1").click()
    # 14 | type | id=contact_description_1 | Pentru trimitere sesizare
    self.driver.find_element(By.ID, "contact_description_1").send_keys("Pentru trimitere sesizare")
    # 15 | click | id=save-button |
    self.driver.find_element(By.ID, "save-button").click()
    assert "Successful creation." in self.driver.page_source
    # 16 | open | http://
    self.driver.get("http://34.118.122.203/ro/")
    # 17 | setWindowSize | 1050x708 |
    self.driver.set_window_size(1050, 708)
    # 18 | click | linkText=Contacteaza-ne |
    self.driver.find_element(By.LINK_TEXT, "Contacteaza-ne").click()
    # 19 | click | id=id_contact |
    self.driver.find_element(By.ID, "id_contact").click()
    # 20 | select | id=id_contact | label=Reclamatie
    dropdown = self.driver.find_element(By.ID, "id_contact")
    options = dropdown.find_elements(By.TAG_NAME, "option")
    texts = [o.get_attribute("innerText") for o in options]
    assert "Reclamatie" in texts

  
