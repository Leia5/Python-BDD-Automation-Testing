# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestMaintenanceIP():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_maintenanceIP(self):
    # Test name: maintenanceIP
    # Step # | name | target | value
    # 1 | open | http://34.118.122.203/administration/index.php?controller=AdminLogin&token=1e53b83c6f3b96a3ca75976d5bab155e | 
    self.driver.get("http://34.118.122.203/administration/index.php?controller=AdminLogin&token=1e53b83c6f3b96a3ca75976d5bab155e")
    # 2 | setWindowSize | 1936x1056 |
    self.driver.set_window_size(1936, 1056)
    # 3 | type | id=email | leahivanovici@gmail.com
    self.driver.find_element(By.ID, "email").send_keys("leahivanovici@gmail.com")
    # 4 | type | id=passwd | 123456789
    self.driver.find_element(By.ID, "passwd").send_keys("123456789")
    # 5 | click | id=submit_login |
    self.driver.find_element(By.ID, "submit_login").click()
    side_bar = WebDriverWait(self.driver, 15).until(lambda d: d.find_element(By.ID, "nav-sidebar"))
    self.driver.execute_script("let container = document.getElementById('nav-sidebar'); container.scrollTo(0,1000);")
    # 6 | click | css=#subtab-ShopParameters span |
    self.driver.find_element(By.CSS_SELECTOR, "#subtab-ShopParameters span").click()
    # 7 | click | linkText=General |
    # self.driver.find_element(By.LINK_TEXT, "General").click()
    element = WebDriverWait(self.driver, 15).until(lambda d: d.find_element(By.LINK_TEXT, "General"))
    element.click()
    # 8 | click | id=subtab-AdminMaintenance |
    self.driver.find_element(By.ID, "subtab-AdminMaintenance").click()
    # 9 | click | id=form_enable_shop_0 |
    self.driver.find_element(By.ID, "form_enable_shop_0").click()
    # 10 | click | css=.btn-outline-primary |
    self.driver.find_element(By.CSS_SELECTOR, ".btn-outline-primary").click()
    # 11 | click | id=form-maintenance-save-button |
    self.driver.implicitly_wait(2)
    self.driver.find_element(By.ID, "form-maintenance-save-button").click()
    # 12 | open | http://34.118.122.203/ro/ |
    self.driver.get("http://34.118.122.203/ro/")
    # 13 | setWindowSize | 1050x708 |
    self.driver.set_window_size(1050, 708)
    assert "Revenim curand." not in self.driver.page_source
    element_ = self.driver.find_element(By.CLASS_NAME,"featured-products")
    assert element_ is not None


    ############### Test name: enablestore_maintenanceIP ###############
    self.driver.get(
      "http://34.118.122.203/administration/index.php?controller=AdminLogin&token=1e53b83c6f3b96a3ca75976d5bab155e")
    self.driver.set_window_size(1936, 1056)
    self.driver.find_element(By.ID, "email").send_keys("leahivanovici@gmail.com")
    self.driver.find_element(By.ID, "passwd").send_keys("123456789")
    self.driver.find_element(By.ID, "submit_login").click()
    side_bar = WebDriverWait(self.driver, 15).until(lambda d: d.find_element(By.ID, "nav-sidebar"))
    self.driver.execute_script("let container = document.getElementById('nav-sidebar'); container.scrollTo(0,1000);")
    self.driver.find_element(By.CSS_SELECTOR, "#subtab-ShopParameters span").click()
    self.driver.find_element(By.LINK_TEXT, "General").click()
    self.driver.find_element(By.ID, "subtab-AdminMaintenance").click()
    self.driver.find_element(By.ID, "form_maintenance_ip").send_keys("")
    self.driver.implicitly_wait(10)
    self.driver.find_element(By.ID, "form_enable_shop_1").click()
    self.driver.implicitly_wait(2)
    self.driver.find_element(By.ID, "form-maintenance-save-button").click()
    assert "Successful update" in self.driver.find_element(By.CLASS_NAME, "alert-text").text
  
