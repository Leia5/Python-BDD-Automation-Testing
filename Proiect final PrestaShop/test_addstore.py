# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestAddstore():
    def setup_method(self, method):
        self.driver = webdriver.Chrome()
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def test_addstore(self):
        # Test name: add_store
        # Step # | name | target | value
        # 1 | open | http://34.118.122.203/administration/index.php?controller=AdminLogin&logout=1&token=9a6620764c248cdd5422f2a6b5e18bb4 |
        self.driver.get(
            "http://34.118.122.203/administration/index.php?controller=AdminLogin&logout=1&token=9a6620764c248cdd5422f2a6b5e18bb4")
        # 2 | setWindowSize | 1382x744 |
        self.driver.set_window_size(1382, 744)
        # 3 | type | id=email | leahivanovici@gmail.com
        self.driver.find_element(By.ID, "email").send_keys("leahivanovici@gmail.com")
        # 4 | type | id=passwd | 123456789
        self.driver.find_element(By.ID, "passwd").send_keys("123456789")
        # 5 | click | id=submit_login |
        self.driver.find_element(By.ID, "submit_login").click()
        side_bar = WebDriverWait(self.driver, 15).until(lambda d: d.find_element(By.ID, "nav-sidebar"))
        self.driver.execute_script("let container = document.getElementById('nav-sidebar'); container.scrollTo(0,1000);")
        # 6 | click | css=#subtab-ShopParameters span |
        self.driver.find_element(By.CSS_SELECTOR, "#subtab-ShopParameters span").click()
        # 7 | click | linkText=Contact |
        contact = WebDriverWait(self.driver, 15).until(lambda d: d.find_element(By.LINK_TEXT, "Contact"))
        contact.click()
        # 8 | click | id=subtab-AdminStores |
        self.driver.find_element(By.ID, "subtab-AdminStores").click()
        # 9 | click | css=#page-header-desc-store-new_store > div |
        self.driver.find_element(By.CSS_SELECTOR, "#page-header-desc-store-new_store > div").click()
        # 10 | click | id=name_1 |
        self.driver.find_element(By.ID, "name_1").click()
        # 11 | type | id=name_1 | SUD Plaza
        self.driver.find_element(By.ID, "name_1").send_keys("SUD Plaza")
        # 12 | click | id=address1_1 |
        self.driver.find_element(By.ID, "address1_1").click()
        # 13 | type | id=address1_1 | Maresal Constantin Prezan 23
        self.driver.find_element(By.ID, "address1_1").send_keys("Maresal Constantin Prezan 23")
        # 14 | click | id=postcode |
        self.driver.find_element(By.ID, "postcode").click()
        # 15 | type | id=postcode | 307221
        self.driver.find_element(By.ID, "postcode").send_keys("307221")
        # 16 | click | id=city |
        self.driver.find_element(By.ID, "city").click()
        # 17 | type | id=city | Timisoara
        self.driver.find_element(By.ID, "city").send_keys("Timisoara")
        # 18 | click | id=id_country |
        self.driver.find_element(By.ID, "id_country").click()
        # 19 | select | id=id_country | label=Romania
        dropdown = self.driver.find_element(By.ID, "id_country")
        dropdown.find_element(By.XPATH, "//option[. = 'Romania']").click()
        # 20 | click | id=id_state |
        self.driver.find_element(By.ID, "id_state").click()
        # 21 | select | id=id_state | label=Timis
        dropdown = self.driver.find_element(By.ID, "id_state")
        dropdown.find_element(By.XPATH, "//option[. = 'Timis']").click()
        # 22 | click | id=latitude |
        self.driver.find_element(By.ID, "latitude").click()
        # 23 | type | id=latitude | 25.001
        self.driver.find_element(By.ID, "latitude").send_keys("25.001")
        # 24 | click | id=longitude |
        self.driver.find_element(By.ID, "longitude").click()
        # 25 | type | id=longitude | -45.002
        self.driver.find_element(By.ID, "longitude").send_keys("-45.002")
        # 26 | click | id=image-selectbutton |
        # self.driver.find_element(By.ID, "image-selectbutton").click()
        # 27 | type | id=image | C:\fakepath\Sud Plaza.JPG
        self.driver.find_element(By.ID, "image").send_keys("C:\\Users\\Intel_I3\\Documents\\Sud_Plaza.JPG")
        # 28 | click | name=hours[1][1] |
        self.driver.find_element(By.NAME, "hours[1][1]").click()
        # 29 | type | name=hours[1][1] | 10:00AM - 20:00PM
        self.driver.find_element(By.NAME, "hours[1][1]").send_keys("10:00AM - 20:00PM")
        # 30 | click | name=hours[2][1] |
        self.driver.find_element(By.NAME, "hours[2][1]").click()
        # 31 | type | name=hours[2][1] | 10:00AM - 20:00PM
        self.driver.find_element(By.NAME, "hours[2][1]").send_keys("10:00AM - 20:00PM")
        # 32 | click | name=hours[3][1] |
        self.driver.find_element(By.NAME, "hours[3][1]").click()
        # 33 | type | name=hours[3][1] | 10:00AM - 20:00PM
        self.driver.find_element(By.NAME, "hours[3][1]").send_keys("10:00AM - 20:00PM")
        # 34 | click | name=hours[4][1] |
        self.driver.find_element(By.NAME, "hours[4][1]").click()
        # 35 | type | name=hours[4][1] | 10:00AM - 20:00PM
        self.driver.find_element(By.NAME, "hours[4][1]").send_keys("10:00AM - 20:00PM")
        # 36 | click | name=hours[5][1] |
        self.driver.find_element(By.NAME, "hours[5][1]").click()
        # 37 | type | name=hours[5][1] | 10:00AM - 20:00PM
        self.driver.find_element(By.NAME, "hours[5][1]").send_keys("10:00AM - 20:00PM")
        # 38 | click | name=hours[6][1] |
        self.driver.find_element(By.NAME, "hours[6][1]").click()
        # 39 | type | name=hours[6][1] | 10:00AM - 20:00PM
        self.driver.find_element(By.NAME, "hours[6][1]").send_keys("10:00AM - 20:00PM")
        # 40 | click | name=hours[7][1] |
        self.driver.find_element(By.NAME, "hours[7][1]").click()
        # 41 | type | name=hours[7][1] | Inchis
        self.driver.find_element(By.NAME, "hours[7][1]").send_keys("Inchis")
        # 42 | click | id=store_form_submit_btn |
        self.driver.find_element(By.ID, "store_form_submit_btn").click()
        assert "Successful creation." in self.driver.page_source
        # 43 | open | http://34.118.122.203/en/ |
        self.driver.get("http://34.118.122.203/en/")
        # 44 | setWindowSize | 1382x744 |
        self.driver.set_window_size(1382, 744)
        # 45 | click | id=link-static-page-stores-2 |
        self.driver.find_element(By.ID, "link-static-page-stores-2").click()
        content_section = self.driver.find_element(By.ID, "content")
        last_article = content_section.find_elements(By.TAG_NAME, "article")[-1]
        title_element = last_article.find_element(By.TAG_NAME, "p")
        title = title_element.get_attribute("innerText")
        assert title.lower() == "SUD Plaza".lower()


        ############### Test name: delete_store ###############
        # Step # | name | target | value
        # 1 | open | /administration/index.php?controller=AdminLogin&token=1e53b83c6f3b96a3ca75976d5bab155e |
        self.driver.get(
            "http://34.118.122.203/administration/index.php?controller=AdminLogin&token=1e53b83c6f3b96a3ca75976d5bab155e")
        # 2 | setWindowSize | 1382x744 |
        self.driver.set_window_size(1382, 744)
        # 3 | type | id=email | leahivanovici@gmail.com
        self.driver.find_element(By.ID, "email").send_keys("leahivanovici@gmail.com")
        # 4 | type | id=passwd | 123456789
        self.driver.find_element(By.ID, "passwd").send_keys("123456789")
        # 5 | click | css=.ladda-label |
        self.driver.find_element(By.CSS_SELECTOR, ".ladda-label").click()
        side_bar = WebDriverWait(self.driver, 15).until(lambda d: d.find_element(By.ID, "nav-sidebar"))
        self.driver.execute_script("let container = document.getElementById('nav-sidebar'); container.scrollTo(0,1000);")
        # 6 | click | css=#subtab-ShopParameters span |
        self.driver.find_element(By.CSS_SELECTOR, "#subtab-ShopParameters span").click()
        # 7 | click | linkText=Contact |
        contact = WebDriverWait(self.driver, 15).until(lambda d: d.find_element(By.LINK_TEXT, "Contact"))
        contact.click()
        # 8 | click | id=subtab-AdminStores |
        self.driver.find_element(By.ID, "subtab-AdminStores").click()
        # 9 | click | css=.odd:nth-child(19) .icon-caret-down |
        last_article = self.driver.find_elements(By.CLASS_NAME, "text-right")[-1]
        select_last_article = last_article.find_element(By.CLASS_NAME, "icon-caret-down")
        select_last_article.click()
        # 10 | click | linkText=Delete |
        self.driver.find_element(By.LINK_TEXT, "Delete").click()
        # 11 | click | id=popup_ok |
        self.driver.find_element(By.ID, "popup_ok").click()
        assert "Successful deletion." in self.driver.page_source
